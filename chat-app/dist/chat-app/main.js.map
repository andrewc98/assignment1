{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatComponent } from './chat/chat.component';\nimport { LoginComponent} from './login/login.component';\n\n\nconst routes: Routes = [\n  {path:'home', component:LoginComponent},    //Home route\n  {path:'index', component:LoginComponent},   //Does this work?\n  {path:'chat', component:ChatComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!-- https://bootswatch.com/superhero/ -->\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Chat Application</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor02\\\" aria-controls=\\\"navbarColor02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor02\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"home\\\">Login<span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"chat\\\">Chat</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\n      <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</nav>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ChatComponent } from './chat/chat.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<!-- https://bootswatch.com/superhero/ -->\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Chat Application</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor02\\\" aria-controls=\\\"navbarColor02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor02\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"home\\\">Login<span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"chat\\\">Chat</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\n      <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</nav>\\n\\n<div id=\\\"chat_history\\\" style=\\\"height:500px\\\">\\n  <div *ngFor=\\\"let message of messages\\\">\\n    {{message.text}}\\n  </div>\\n</div>\\n\\n<input [(ngModel)]=\\\"message\\\" type=\\\"text\\\" placeholder=\\\"message\\\" name=\\\"message\\\" id=\\\"message\\\" class=\\\"form-control\\\">\\n<button (click)=\\\"sendMessage(message)\\\" class=\\\"btn btn-primary\\\">Send</button>\"","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from '../socket.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  username: String;\n  messages = []\n  message;\n  connection\n  constructor(private sockServer: SocketService, private router:Router) { }\n\n  ngOnInit() {\n    if(!sessionStorage.getItem(\"username\")){\n      console.log(\"there is no username\");\n      this.router.navigateByUrl(\"home\");\n    } else {\n      this.username = sessionStorage.getItem(\"username\");\n    }\n\n    this.connection = this.sockServer.getMessage().subscribe(message=>{\n      this.messages.push(message);\n      this.message = '';\n    });\n  }\n  sendMessage(){\n    let data = '[' + this.username + ']' + this.message;\n    this.sockServer.sendMessage(data);\n  }\n\n  ngOnDestroy(){\n    if (this.connection) {\n      this.connection.unsubscribe();\n    }\n  }\n  logOut(){\n    this.ngOnDestroy();\n    sessionStorage.clear();\n    this.router.navigateByUrl('home');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- https://bootswatch.com/superhero/ -->\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Chat Application</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor02\\\" aria-controls=\\\"navbarColor02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor02\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"home\\\">Login<span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"chat\\\">Chat</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\n      <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</nav>\\n\\n<!-- https://codeshare.io/2KvRmX -->\\n<form (submit)=\\\"loginUser($event)\\\">\\n  <input [(ngModel)]=\\\"username\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" id=\\\"username\\\" class=\\\"form-control\\\" name=\\\"username\\\">\\n  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Enter Chat</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public username: string;\n  constructor(private router:Router, private form:FormsModule) { }\n\n  ngOnInit() {\n  }\n\n  loginUser(event){\n    event.preventDefault();\n    if (typeof(Storage) !== \"undefined\") {\n      sessionStorage.setItem(\"username\", this.username);\n      this.router.navigate(['/chat']);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, observable } from 'rxjs';\nimport * as io from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SocketService {\n  private url = 'http://localhost:3000';\n  private socket;\n  constructor() { }\n\n  sendMessage (message) {\n    console.log('sendMessage(' + message + ')');\n    this.socket.emit('add-message', message);\n  }\n\n  getMessage () {\n        this.socket = io(this.url);\n    \n    console.log('getMessages');\n    let observable = new Observable(observer => {\n      this.socket.on('message', (data)=>{\n        observer.next(data);\n        return()=>{\n          this.socket.disconnect();\n        }\n      });\n    });\n  return observable;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}